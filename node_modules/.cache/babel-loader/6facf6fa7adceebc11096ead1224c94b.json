{"ast":null,"code":"import { uiActions } from './ui-slice';\nimport { cartActions } from './cart-slice';\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch('https://cart-8e111-default-rtdb.firebaseio.com/cart.json');\n\n      if (!response.ok) {\n        throw new Error('Could not fetch cart data!');\n      }\n\n      const data = await response.json();\n      return data;\n    };\n\n    try {\n      const cartData = await fetchData();\n      console.log(\"cartData.items\", cartData.items);\n      dispatch(cartActions.replaceCart({\n        items: cartData.items || [],\n        totalQuantity: cartData.totalQuantity\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'Fetching cart data failed!'\n      }));\n    }\n  };\n};\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: 'pending',\n      title: 'Sending...',\n      message: 'Sending cart data!'\n    }));\n\n    const sendRequest = async () => {\n      const response = await fetch('https://cart-8e111-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify({\n          items: cart.items,\n          totalQuantity: cart.totalQuantity\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error('Sending cart data failed.');\n      }\n    };\n\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'Success!',\n        message: 'Sent cart data successfully!'\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'Sending cart data failed!'\n      }));\n    }\n  };\n};","map":{"version":3,"sources":["D:/innovationM/React js Project/Advance-redux-ReduxCart/src/store/cart-actions.js"],"names":["uiActions","cartActions","fetchCartData","dispatch","fetchData","response","fetch","ok","Error","data","json","cartData","console","log","items","replaceCart","totalQuantity","error","showNotification","status","title","message","sendCartData","cart","sendRequest","method","body","JSON","stringify"],"mappings":"AAAA,SAASA,SAAT,QAA0B,YAA1B;AACA,SAASC,WAAT,QAA4B,cAA5B;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AACjC,SAAO,MAAOC,QAAP,IAAoB;AACzB,UAAMC,SAAS,GAAG,YAAY;AAC5B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,0DAD0B,CAA5B;;AAIA,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,4BAAV,CAAN;AACD;;AAED,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AAEA,aAAOD,IAAP;AACD,KAZD;;AAcA,QAAI;AACF,YAAME,QAAQ,GAAG,MAAMP,SAAS,EAAhC;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,QAAQ,CAACG,KAAvC;AACAX,MAAAA,QAAQ,CACNF,WAAW,CAACc,WAAZ,CAAwB;AACtBD,QAAAA,KAAK,EAAEH,QAAQ,CAACG,KAAT,IAAkB,EADH;AAEtBE,QAAAA,aAAa,EAAEL,QAAQ,CAACK;AAFF,OAAxB,CADM,CAAR;AAMD,KATD,CASE,OAAOC,KAAP,EAAc;AACdd,MAAAA,QAAQ,CACNH,SAAS,CAACkB,gBAAV,CAA2B;AACzBC,QAAAA,MAAM,EAAE,OADiB;AAEzBC,QAAAA,KAAK,EAAE,QAFkB;AAGzBC,QAAAA,OAAO,EAAE;AAHgB,OAA3B,CADM,CAAR;AAOD;AACF,GAjCD;AAkCD,CAnCM;AAqCP,OAAO,MAAMC,YAAY,GAAIC,IAAD,IAAU;AACpC,SAAO,MAAOpB,QAAP,IAAoB;AACzBA,IAAAA,QAAQ,CACNH,SAAS,CAACkB,gBAAV,CAA2B;AACzBC,MAAAA,MAAM,EAAE,SADiB;AAEzBC,MAAAA,KAAK,EAAE,YAFkB;AAGzBC,MAAAA,OAAO,EAAE;AAHgB,KAA3B,CADM,CAAR;;AAQA,UAAMG,WAAW,GAAG,YAAY;AAC9B,YAAMnB,QAAQ,GAAG,MAAMC,KAAK,CAC1B,0DAD0B,EAE1B;AACEmB,QAAAA,MAAM,EAAE,KADV;AAEEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBd,UAAAA,KAAK,EAAES,IAAI,CAACT,KADO;AAEnBE,UAAAA,aAAa,EAAEO,IAAI,CAACP;AAFD,SAAf;AAFR,OAF0B,CAA5B;;AAWA,UAAI,CAACX,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,2BAAV,CAAN;AACD;AACF,KAfD;;AAiBA,QAAI;AACF,YAAMgB,WAAW,EAAjB;AAEArB,MAAAA,QAAQ,CACNH,SAAS,CAACkB,gBAAV,CAA2B;AACzBC,QAAAA,MAAM,EAAE,SADiB;AAEzBC,QAAAA,KAAK,EAAE,UAFkB;AAGzBC,QAAAA,OAAO,EAAE;AAHgB,OAA3B,CADM,CAAR;AAOD,KAVD,CAUE,OAAOJ,KAAP,EAAc;AACdd,MAAAA,QAAQ,CACNH,SAAS,CAACkB,gBAAV,CAA2B;AACzBC,QAAAA,MAAM,EAAE,OADiB;AAEzBC,QAAAA,KAAK,EAAE,QAFkB;AAGzBC,QAAAA,OAAO,EAAE;AAHgB,OAA3B,CADM,CAAR;AAOD;AACF,GA7CD;AA8CD,CA/CM","sourcesContent":["import { uiActions } from './ui-slice';\nimport { cartActions } from './cart-slice';\n\nexport const fetchCartData = () => {\n  return async (dispatch) => {\n    const fetchData = async () => {\n      const response = await fetch(\n        'https://cart-8e111-default-rtdb.firebaseio.com/cart.json'\n      );\n\n      if (!response.ok) {\n        throw new Error('Could not fetch cart data!');\n      }\n\n      const data = await response.json();\n\n      return data;\n    };\n\n    try {\n      const cartData = await fetchData();\n      console.log(\"cartData.items\", cartData.items)\n      dispatch(\n        cartActions.replaceCart({\n          items: cartData.items || [],\n          totalQuantity: cartData.totalQuantity,\n        })\n      );\n    } catch (error) {\n      dispatch(\n        uiActions.showNotification({\n          status: 'error',\n          title: 'Error!',\n          message: 'Fetching cart data failed!',\n        })\n      );\n    }\n  };\n};\n\nexport const sendCartData = (cart) => {\n  return async (dispatch) => {\n    dispatch(\n      uiActions.showNotification({\n        status: 'pending',\n        title: 'Sending...',\n        message: 'Sending cart data!',\n      })\n    );\n\n    const sendRequest = async () => {\n      const response = await fetch(\n        'https://cart-8e111-default-rtdb.firebaseio.com/cart.json',\n        {\n          method: 'PUT',\n          body: JSON.stringify({\n            items: cart.items,\n            totalQuantity: cart.totalQuantity,\n          }),\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error('Sending cart data failed.');\n      }\n    };\n\n    try {\n      await sendRequest();\n\n      dispatch(\n        uiActions.showNotification({\n          status: 'success',\n          title: 'Success!',\n          message: 'Sent cart data successfully!',\n        })\n      );\n    } catch (error) {\n      dispatch(\n        uiActions.showNotification({\n          status: 'error',\n          title: 'Error!',\n          message: 'Sending cart data failed!',\n        })\n      );\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}